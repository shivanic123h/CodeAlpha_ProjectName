{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMXBHm1pL4g0ChfKCVetFjU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"OBQUOjQTGzZc","executionInfo":{"status":"ok","timestamp":1752734666447,"user_tz":-330,"elapsed":7599,"user":{"displayName":"Shivani chaudhary","userId":"10521456388216266626"}},"outputId":"a0f56507-d194-46a8-a851-d3d4f9e10bcb"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: seaborn in /usr/local/lib/python3.11/dist-packages (0.13.2)\n","Requirement already satisfied: numpy!=1.24.0,>=1.20 in /usr/local/lib/python3.11/dist-packages (from seaborn) (2.0.2)\n","Requirement already satisfied: pandas>=1.2 in /usr/local/lib/python3.11/dist-packages (from seaborn) (2.2.2)\n","Requirement already satisfied: matplotlib!=3.6.1,>=3.4 in /usr/local/lib/python3.11/dist-packages (from seaborn) (3.10.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.3.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (4.58.5)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.4.8)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (24.2)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (11.2.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (3.2.3)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2->seaborn) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2->seaborn) (2025.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.4->seaborn) (1.17.0)\n"]}],"source":["# Install seaborn if not installed\n","!pip install seaborn\n","\n","# Import necessary libraries\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n"]},{"cell_type":"code","source":["# Load the built-in 'tips' dataset\n","df = sns.load_dataset('tips')\n","\n","# Show first 5 rows\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"GltEYwvYHMkh","executionInfo":{"status":"ok","timestamp":1752734735121,"user_tz":-330,"elapsed":6,"user":{"displayName":"Shivani chaudhary","userId":"10521456388216266626"}},"outputId":"e009f34f-9956-46b6-e4b7-d5fdbb8dbc8e"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   total_bill   tip     sex smoker  day    time  size\n","0       16.99  1.01  Female     No  Sun  Dinner     2\n","1       10.34  1.66    Male     No  Sun  Dinner     3\n","2       21.01  3.50    Male     No  Sun  Dinner     3\n","3       23.68  3.31    Male     No  Sun  Dinner     2\n","4       24.59  3.61  Female     No  Sun  Dinner     4"],"text/html":["\n","  <div id=\"df-27e0aa51-7e83-491c-8f96-02b4c4d6351c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>total_bill</th>\n","      <th>tip</th>\n","      <th>sex</th>\n","      <th>smoker</th>\n","      <th>day</th>\n","      <th>time</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>16.99</td>\n","      <td>1.01</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10.34</td>\n","      <td>1.66</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>21.01</td>\n","      <td>3.50</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23.68</td>\n","      <td>3.31</td>\n","      <td>Male</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>24.59</td>\n","      <td>3.61</td>\n","      <td>Female</td>\n","      <td>No</td>\n","      <td>Sun</td>\n","      <td>Dinner</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27e0aa51-7e83-491c-8f96-02b4c4d6351c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-27e0aa51-7e83-491c-8f96-02b4c4d6351c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-27e0aa51-7e83-491c-8f96-02b4c4d6351c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ad2fdc50-ca1d-4716-bc30-3e1654497fe5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad2fdc50-ca1d-4716-bc30-3e1654497fe5')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ad2fdc50-ca1d-4716-bc30-3e1654497fe5 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 244,\n  \"fields\": [\n    {\n      \"column\": \"total_bill\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.902411954856856,\n        \"min\": 3.07,\n        \"max\": 50.81,\n        \"num_unique_values\": 229,\n        \"samples\": [\n          22.12,\n          20.23,\n          14.78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tip\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3836381890011826,\n        \"min\": 1.0,\n        \"max\": 10.0,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          3.35,\n          1.5,\n          6.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Male\",\n          \"Female\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smoker\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Yes\",\n          \"No\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Sat\",\n          \"Fri\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Lunch\",\n          \"Dinner\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 6,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# Basic information\n","df.info()\n","\n","# Summary statistics\n","df.describe()\n","\n","# Data types of each column\n","df.dtypes\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":547},"id":"C8ggawtmHkRx","executionInfo":{"status":"ok","timestamp":1752734758552,"user_tz":-330,"elapsed":484,"user":{"displayName":"Shivani chaudhary","userId":"10521456388216266626"}},"outputId":"439ff2ab-b44a-44d2-d847-30d6dbfeb6cc"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 244 entries, 0 to 243\n","Data columns (total 7 columns):\n"," #   Column      Non-Null Count  Dtype   \n","---  ------      --------------  -----   \n"," 0   total_bill  244 non-null    float64 \n"," 1   tip         244 non-null    float64 \n"," 2   sex         244 non-null    category\n"," 3   smoker      244 non-null    category\n"," 4   day         244 non-null    category\n"," 5   time        244 non-null    category\n"," 6   size        244 non-null    int64   \n","dtypes: category(4), float64(2), int64(1)\n","memory usage: 7.4 KB\n"]},{"output_type":"execute_result","data":{"text/plain":["total_bill     float64\n","tip            float64\n","sex           category\n","smoker        category\n","day           category\n","time          category\n","size             int64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>total_bill</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>tip</th>\n","      <td>float64</td>\n","    </tr>\n","    <tr>\n","      <th>sex</th>\n","      <td>category</td>\n","    </tr>\n","    <tr>\n","      <th>smoker</th>\n","      <td>category</td>\n","    </tr>\n","    <tr>\n","      <th>day</th>\n","      <td>category</td>\n","    </tr>\n","    <tr>\n","      <th>time</th>\n","      <td>category</td>\n","    </tr>\n","    <tr>\n","      <th>size</th>\n","      <td>int64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Correlation heatmap\n","sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')\n","plt.title(\"Correlation Matrix\")\n","plt.show()\n","\n","# Check for duplicate rows\n","df.duplicated().sum()\n","\n","# Check for outliers using boxplot\n","sns.boxplot(data=df[['total_bill', 'tip']])\n","plt.title(\"Outlier Detection\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":887},"id":"G3yMJ29JIjBS","executionInfo":{"status":"ok","timestamp":1752734778447,"user_tz":-330,"elapsed":2302,"user":{"displayName":"Shivani chaudhary","userId":"10521456388216266626"}},"outputId":"1a10a40b-1dc3-44c5-e950-5fa7a57d5553"},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Group by smoker and calculate average tip\n","df.groupby('smoker')['tip'].mean()\n","\n","# Visualize\n","sns.boxplot(x='smoker', y='tip', data=df)\n","plt.title(\"Do Smokers Tip More?\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":527},"id":"FYQiunrcIlwC","executionInfo":{"status":"ok","timestamp":1752734791563,"user_tz":-330,"elapsed":518,"user":{"displayName":"Shivani chaudhary","userId":"10521456388216266626"}},"outputId":"72190a07-b498-4fd1-a343-4cdaddaada4e"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-7-3179761013.py:2: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n","  df.groupby('smoker')['tip'].mean()\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Missing values check\n","df.isnull().sum()\n","\n","# Value counts for categorical features\n","print(df['sex'].value_counts())\n","print(df['day'].value_counts())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"4li9w2yiIo2j","executionInfo":{"status":"ok","timestamp":1752734799859,"user_tz":-330,"elapsed":3,"user":{"displayName":"Shivani chaudhary","userId":"10521456388216266626"}},"outputId":"370dcd5c-a7f0-4a1c-aea9-42e2a0d21eeb"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["sex\n","Male      157\n","Female     87\n","Name: count, dtype: int64\n","day\n","Sat     87\n","Sun     76\n","Thur    62\n","Fri     19\n","Name: count, dtype: int64\n"]}]}]}